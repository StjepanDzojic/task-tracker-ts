{"version":3,"sources":["components/AddTask.tsx","components/Button.tsx","components/Header.tsx","components/DeleteButton.tsx","components/ReminderButton.tsx","components/Task.tsx","components/Tasks.tsx","App.tsx","index.tsx"],"names":["AddTask","onAdd","useState","undefined","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","length","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","onShow","onClick","Header","title","showAdd","DeleteButton","task","onDelete","id","ReminderButton","onToggle","Task","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.971d527e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { AddTaskProps } from \"../Models/Interfaces/AddTaskProps\";\n\nconst AddTask: React.FC<AddTaskProps> = ({ onAdd }) => {\n  const [text, setText] = useState<string | undefined>(undefined);\n  const [day, setDay] = useState<string | undefined>(undefined);\n  const [reminder, setReminder] = useState<boolean>(false);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!text || !day) {\n      alert(\"All the empty spaces must be filled out, please fill them out!\");\n      return;\n    }\n\n    if (text.length < 10) {\n      alert(\"The task must contain at least 10 characters!\");\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React from \"react\";\nimport { ButtonProps } from \"../Models/Interfaces/ButtonProps\";\n\nexport const Button: React.FC<ButtonProps> = ({ text, onShow }) => {\n  return <button className=\"btn\" onClick={onShow}>{text}</button>;\n};\n\nexport default Button\n","import React from \"react\";\nimport { HeaderProps } from \"../Models/Interfaces/HeaderProps\";\nimport Button from \"./Button\";\n\nexport const Header: React.FC<HeaderProps> = ({ title, onShow, showAdd}) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button text={showAdd ? \"Hide\" : \"Show\"} onShow={onShow}/>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { HtmlHTMLAttributes } from 'react'\nimport { DeleteButtonProps } from '../Models/Interfaces/DeleteButtonProps'\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({ task, onDelete }) => {\n    return (\n        <button className=\"btn-delete\" onClick={()=> onDelete(task.id)} >\n            Delete\n        </button>\n    )\n}\n\nexport default DeleteButton\n","import React from 'react'\nimport { ReminderButtonProps } from '../Models/Interfaces/ReminderButtonProps'\n\nconst ReminderButton: React.FC<ReminderButtonProps> = ({ task, onToggle}) => {\n    return (\n        <button className=\"btn-reminder\" onClick={() => onToggle(task.id)}>Set Reminder</button>\n    )\n}\n\nexport default ReminderButton","import React from \"react\";\nimport { TaskProps } from \"../Models/Interfaces/TaskProps\";\nimport DeleteButton from \"./DeleteButton\";\nimport ReminderButton from \"./ReminderButton\";\n\nexport const Task: React.FC<TaskProps> = ({ task, onDelete, onToggle}) => {\n  return (\n    <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\n      <h3>{task.text}</h3>\n      <p>{task.day}</p>\n      <DeleteButton task={task} onDelete={onDelete}/>\n      <ReminderButton task={task} onToggle={onToggle} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Task } from \"./Task\";\nimport {TaskInfo} from \"../Models/Types/TaskInfo\"\nimport {TasksProps} from \"../Models/Interfaces/TasksProps\"\n\n\nexport const Tasks: React.FC<TasksProps> = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport { Tasks } from \"./components/Tasks\";\nimport { Task } from \"./Models/Types/Task\";\nimport { TaskInfo } from \"./Models/Types/TaskInfo\";\n\nconst App: React.FC = () => {\n  const [showAddTask, setShowAddTask] = useState<boolean>(true);\n  const [tasks, setTasks] = useState<TaskInfo[]>([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Shopping\",\n      day: \"May 7th\",\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Meeting\",\n      day: \"July 6th\",\n      reminder: true,\n    },\n  ]);\n\n  const addTask = (task: Task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id: number) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = (id: number) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task tracker\"\n        onShow={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}