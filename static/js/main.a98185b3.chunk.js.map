{"version":3,"sources":["components/AddTask.tsx","components/Button.tsx","components/Header.tsx","components/DeleteButton.tsx","components/ReminderButton.tsx","components/Task.tsx","components/Tasks.tsx","App.tsx","index.tsx"],"names":["AddTask","onAdd","useState","undefined","text","setText","day","setDay","reminder","setReminder","errorText","setErrorText","errorDay","setErrorDay","errorLength","setErrorLength","className","onSubmit","e","preventDefault","length","type","placeholder","value","onChange","target","checked","currentTarget","Button","onShow","onClick","Header","title","showAdd","DeleteButton","task","onDelete","id","ReminderButton","onToggle","Task","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a98185b3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { AddTaskProps } from \"../Models/Interfaces/AddTaskProps\";\n\nconst AddTask: React.FC<AddTaskProps> = ({ onAdd }) => {\n  const [text, setText] = useState<string | undefined>(undefined);\n  const [day, setDay] = useState<string | undefined>(undefined);\n  const [reminder, setReminder] = useState<boolean>(false);\n  const [errorText, setErrorText] = useState<string | undefined>(undefined);\n  const [errorDay, setErrorDay] = useState<string | undefined>(undefined);\n  const [errorLength, setErrorLength] = useState<string | undefined>(undefined);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!text) {\n      setErrorText(\"Task can't be empty!\");\n      return;\n    } else {\n      setErrorText(undefined);\n    }\n\n    if (!day) {\n      setErrorDay(\"Day can't be empty!\");\n      return;\n    } else {\n      setErrorDay(undefined);\n    }\n\n    if (text.length < 10) {\n      setErrorLength(\"Task must contain 10 characters!\");\n      return;\n    } else {\n      setErrorLength(undefined);\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <small>{errorText}</small>\n        <small>{errorLength}</small>\n      </div>\n      <div className=\"form-control\">\n        <label>Day</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n        <small>{errorDay}</small>\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React from \"react\";\nimport { ButtonProps } from \"../Models/Interfaces/ButtonProps\";\n\nexport const Button: React.FC<ButtonProps> = ({ text, onShow }) => {\n  return (\n    <button className=\"btn\" onClick={onShow}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { HeaderProps } from \"../Models/Interfaces/HeaderProps\";\nimport Button from \"./Button\";\n\nexport const Header: React.FC<HeaderProps> = ({ title, onShow, showAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button text={showAdd ? \"Hide\" : \"Show\"} onShow={onShow} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport { DeleteButtonProps } from \"../Models/Interfaces/DeleteButtonProps\";\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({ task, onDelete }) => {\n  return (\n    <button className=\"btn-delete\" onClick={() => onDelete(task.id)}>\n      Delete\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport { ReminderButtonProps } from \"../Models/Interfaces/ReminderButtonProps\";\n\nconst ReminderButton: React.FC<ReminderButtonProps> = ({ task, onToggle }) => {\n  return (\n    <button className=\"btn-reminder\" onClick={() => onToggle(task.id)}>\n      Set Reminder\n    </button>\n  );\n};\n\nexport default ReminderButton;\n","import React from \"react\";\nimport { TaskProps } from \"../Models/Interfaces/TaskProps\";\nimport DeleteButton from \"./DeleteButton\";\nimport ReminderButton from \"./ReminderButton\";\n\nexport const Task: React.FC<TaskProps> = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\n      <h3>{task.text}</h3>\n      <p>{task.day}</p>\n      <DeleteButton task={task} onDelete={onDelete} />\n      <ReminderButton task={task} onToggle={onToggle} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Task } from \"./Task\";\nimport { TaskInfo } from \"../Models/Types/TaskInfo\";\nimport { TasksProps } from \"../Models/Interfaces/TasksProps\";\n\nexport const Tasks: React.FC<TasksProps> = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport { Tasks } from \"./components/Tasks\";\nimport { Task } from \"./Models/Types/Task\";\nimport { TaskInfo } from \"./Models/Types/TaskInfo\";\n\nconst App: React.FC = () => {\n  const [showAddTask, setShowAddTask] = useState<boolean>(true);\n  const [tasks, setTasks] = useState<TaskInfo[]>([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Shopping\",\n      day: \"May 7th\",\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Meeting\",\n      day: \"July 6th\",\n      reminder: true,\n    },\n  ]);\n\n  const addTask = (task: Task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id: number) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = (id: number) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task tracker\"\n        onShow={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}