{"version":3,"sources":["components/AddTask.tsx","components/Button.tsx","components/Header.tsx","components/DeleteButton.tsx","components/ReminderButton.tsx","components/Task.tsx","components/Tasks.tsx","App.tsx","index.tsx"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","onShow","onClick","Header","title","showAdd","DeleteButton","task","onDelete","id","ReminderButton","onToggle","Task","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b33efb96.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\ninterface Props{\n    onAdd: (task: {text: string, day: string, reminder: boolean} ) => void;\n}\n\nconst AddTask: React.FC<Props> = ({ onAdd }) => {\n  const [text, setText] = useState<string>(\"\");\n  const [day, setDay] = useState<string>(\"\");\n  const [reminder, setReminder] = useState<boolean>(false);\n\n  const onSubmit = (e: React.FormEvent) => {\n      e.preventDefault();\n\n      if(!text){\n          alert(\"Please add a task\");\n          return;\n      };\n\n      onAdd({text, day, reminder});\n\n      setText(\"\");\n      setDay(\"\");\n      setReminder(false);\n\n  };\n\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit} >\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;","import React from \"react\";\n\ninterface Props {\n  text: string;\n  onShow: () => void;\n}\n\nexport const Button: React.FC<Props> = ({ text, onShow }) => {\n  return <button className=\"btn\" onClick={onShow}>{text}</button>;\n};\n\nexport default Button\n","import React from \"react\";\nimport Button from \"./Button\";\n\ninterface Props {\n  title: string;\n  onShow: () => void;\n  showAdd: boolean;\n}\n\nexport const Header: React.FC<Props> = ({ title, onShow, showAdd}) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button text={showAdd ? \"Hide\" : \"Show\"} onShow={onShow}/>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { HtmlHTMLAttributes } from 'react'\n\n\ninterface Props{\n    task: TaskInfo;\n    onDelete: ( id: number) => void;\n}\n\nconst DeleteButton: React.FC<Props> = ({ task, onDelete }) => {\n    return (\n        <button className=\"btn-delete\" onClick={()=> onDelete(task.id)} >\n            Delete\n        </button>\n    )\n}\n\nexport default DeleteButton\n","import React from 'react'\n\ninterface Props{\n    task: TaskInfo;\n    onToggle: (id: number) => void;\n}\n\nconst ReminderButton: React.FC<Props> = ({ task, onToggle}) => {\n    return (\n        <button className=\"btn-reminder\" onClick={() => onToggle(task.id)}>Set Reminder</button>\n    )\n}\n\nexport default ReminderButton","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nimport ReminderButton from \"./ReminderButton\";\n\ninterface Props {\n  key: number;\n  task: TaskInfo;\n  onDelete: (id: number) => void\n  onToggle: (id: number) => void\n}\n\nexport const Task: React.FC<Props> = ({ task, onDelete, onToggle}) => {\n  return (\n    <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\n      <h3>{task.text}</h3>\n      <p>{task.day}</p>\n      <DeleteButton task={task} onDelete={onDelete}/>\n      <ReminderButton task={task} onToggle={onToggle} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Task } from \"./Task\";\n\ninterface Props {\n  tasks: TaskInfo[];\n  onDelete: (id: number) => void;\n  onToggle: (id: number) => void;\n}\n\nexport const Tasks: React.FC<Props> = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Identifier } from \"typescript\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport { Tasks } from \"./components/Tasks\";\n\ndeclare global {\n  interface TaskInfo {\n    id: number;\n    text: string;\n    day: string;\n    reminder: boolean;\n  }\n}\nconst App: React.FC = () => {\n  const [showAddTask, setShowAddTask] = useState<boolean>(true);\n  const [tasks, setTasks] = useState<TaskInfo[]>([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Shopping\",\n      day: \"Feb 7th\",\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Meeting\",\n      day: \"Feb 6th\",\n      reminder: true,\n    },\n  ]);\n\n  const addTask = (task: { text: string; day: string; reminder: boolean }) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id: number) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = (id: number) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task tracker\"\n        onShow={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}